#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Predicator
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     9,    20,    21,     7,     8,    14,    15,    16,    17,    18,
     9,     5,    34,     7,     8,    14,    15,    16,    17,    18,
     9,     5,    30,     7,     8,    14,    15,    16,    17,    18,
     9,     5,    31,     7,     8,    14,    15,    16,    17,    18,
     9,     5,    41,     7,     8,    14,    15,    16,    17,    18,
   nil,     5,    23,    28,    27,    26,    25,    24,    19,   nil,
   nil,    20,    21,    14,    15,    16,    17,    18,    14,    15,
    16,    17,    18,    14,    15,    16,    17,    18,    14,    15,
    16,    17,    18,    14,    15,    16,    17,    18,    14,    15,
    16,    17,    18 ]

racc_action_check = [
     0,    22,    22,     0,     0,     0,     0,     0,     0,     0,
     5,     0,    22,     5,     5,     5,     5,     5,     5,     5,
     9,     5,    18,     9,     9,     9,     9,     9,     9,     9,
    20,     9,    19,    20,    20,    20,    20,    20,    20,    20,
    21,    20,    30,    21,    21,    21,    21,    21,    21,    21,
   nil,    21,     6,     6,     6,     6,     6,     6,     1,   nil,
   nil,     1,     1,    23,    23,    23,    23,    23,    24,    24,
    24,    24,    24,    25,    25,    25,    25,    25,    26,    26,
    26,    26,    26,    27,    27,    27,    27,    27,    28,    28,
    28,    28,    28 ]

racc_action_pointer = [
    -2,    58,   nil,   nil,   nil,     8,    37,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    32,
    28,    38,    -2,    56,    61,    66,    71,    76,    81,   nil,
    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil ]

racc_action_default = [
   -25,   -25,    -1,    -2,    -3,   -25,   -25,   -11,   -12,   -25,
   -16,   -17,   -18,   -19,   -20,   -21,   -22,   -23,   -25,   -25,
   -25,   -25,   -25,   -25,   -25,   -25,   -25,   -25,   -25,   -15,
   -25,    42,   -13,   -14,    -4,    -5,    -6,    -7,    -8,    -9,
   -10,   -24 ]

racc_goto_table = [
     1,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,    29,
    35,    36,    37,    38,    39,    40,   nil,   nil,   nil,   nil,
    32,    33 ]

racc_goto_check = [
     1,   nil,   nil,   nil,   nil,     1,   nil,   nil,   nil,     1,
     5,     5,     5,     5,     5,     5,   nil,   nil,   nil,   nil,
     1,     1 ]

racc_goto_pointer = [
   nil,     0,   nil,   nil,   nil,   -13,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,     6,    10,    11,    12,    13 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  3, 22, :_reduce_none,
  3, 23, :_reduce_5,
  3, 23, :_reduce_6,
  3, 23, :_reduce_7,
  3, 23, :_reduce_8,
  3, 23, :_reduce_9,
  3, 23, :_reduce_10,
  1, 24, :_reduce_11,
  1, 24, :_reduce_12,
  3, 25, :_reduce_13,
  3, 25, :_reduce_14,
  2, 25, :_reduce_15,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 29, :_reduce_20,
  1, 30, :_reduce_21,
  1, 30, :_reduce_22,
  1, 30, :_reduce_23,
  3, 28, :_reduce_24 ]

racc_reduce_n = 25

racc_shift_n = 42

racc_token_table = {
  false => 0,
  :error => 1,
  :tBANG => 2,
  :tAND => 3,
  :tOR => 4,
  :tTRUE => 5,
  :tFALSE => 6,
  :tSTRING => 7,
  :tFLOAT => 8,
  :tINTEGER => 9,
  :tDATE => 10,
  :tIDENTIFIER => 11,
  :tDOT => 12,
  :tLPAREN => 13,
  :tRPAREN => 14,
  :tEQ => 15,
  :tNEQ => 16,
  :tLEQ => 17,
  :tGEQ => 18,
  :tLT => 19,
  :tGT => 20 }

racc_nt_base = 21

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "tBANG",
  "tAND",
  "tOR",
  "tTRUE",
  "tFALSE",
  "tSTRING",
  "tFLOAT",
  "tINTEGER",
  "tDATE",
  "tIDENTIFIER",
  "tDOT",
  "tLPAREN",
  "tRPAREN",
  "tEQ",
  "tNEQ",
  "tLEQ",
  "tGEQ",
  "tLT",
  "tGT",
  "$start",
  "predicate",
  "relation_predicate",
  "boolean_predicate",
  "logical_predicate",
  "value",
  "scalar",
  "variable",
  "string",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_5(val, _values)
     Predicator::Predicates::Equal.new val[0], val[2] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_6(val, _values)
     Predicator::Predicates::GreaterThan.new val[0], val[2] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_7(val, _values)
     Predicator::Predicates::LessThan.new val[0], val[2] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_8(val, _values)
     Predicator::Predicates::GreaterThanOrEqual.new val[0], val[2] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_9(val, _values)
     Predicator::Predicates::LessThanOrEqual.new val[0], val[2] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_10(val, _values)
     Predicator::Predicates::NotEqual.new val[0], val[2] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_11(val, _values)
     Predicator::Predicates::True.new 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_12(val, _values)
     Predicator::Predicates::False.new 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_13(val, _values)
     Predicator::Predicates::And.new [val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_14(val, _values)
     Predicator::Predicates::Or.new [val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_15(val, _values)
     Predicator::Predicates::Not.new val[0] 
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_20(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_21(val, _values)
     val[0].to_f 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_22(val, _values)
     val[0].to_i 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_23(val, _values)
     Date.new *val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_24(val, _values)
     Predicator::Variable.new val[0], val[2] 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

  end   # class GeneratedParser
  end   # module Predicator
